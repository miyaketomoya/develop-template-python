[project]
name = "champion-crm"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi==0.115.4",
    "gunicorn==20.1.0",
    "pytest-mock>=3.14.0",
    "ruff==0.11.2",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "mypy==1.15.0",
]


# 以下の設定はhttps://qiita.com/IKEH/items/f907ff139483718ffcd4 を参考
# 意味のないものがあれば随時変更

############
# mypyの設定
############

# https://mypy.readthedocs.io/en/stable/config_file.html

[tool.mypy]
python_version = "3.12"
show_error_context = true  # エラー時のメッセージを詳細表示
show_column_numbers = true  # エラー発生箇所の行数/列数を表示
disallow_untyped_defs = true  # 関数定義の引数/戻り値に型アノテーション必須
no_implicit_optional = true  # デフォルト引数に None を取る場合型アノテーションに Optional 必須
check_untyped_defs = true  # 型注釈がない関数やメソッドに対して型チェックを行う
warn_redundant_casts = true  # 冗長なキャストに警告

[[tool.mypy.overrides]]
# サードパーティの[import-untyped]を無視する
module = [
    'requests/*',
    'psutil',
]
ignore_missing_imports = true

############
# Ruffの設定
############

[tool.ruff]
line-length = 120

# Option Settings
## https://gihyo.jp/article/2023/03/monthly-python-2303
## 略称一覧: https://pypi.org/project/ruff/0.0.242/#supported-rule

## select: 指定したルールをチェックの対象とする
lint.select = ["ALL"]
## ignore: 指定したルールをチェックの対象としない
lint.ignore = [
    "D", # Docstringを中途半端にしか書いていないので、除外する
]

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint.per-file-ignores]
# ファイル毎に無効とする設定

# https://docs.astral.sh/ruff/settings/#lint_per-file-ignores
"*.py" = [
    "ANN101", # selfの型を省略するため
    "ANN102", # clsの型を省略するため
    "COM812", # 末尾のカンマを必須としない
    "ERA001", # コメントアウト文を許可
    "FBT001", # 関数の引数にbooleanを許可(TODO:見直し)
    "FBT002", # 関数の引数にbooleanを許可(TODO:見直し)
    "INP001", # __init__.pyを必須としない
    "PT009", # assertEqualなどを使うため
    "PTH207", # glob.globを許可
    "S311", # randomを許可
    "S603", # Shell無しのsubprocessを許可
    "T201", # print文を許可するため
    "TRY002", # 標準のExceptionの使用を許可
]

# https://github.com/astral-sh/ruff/issues/4368 テストに不都合なチェックをスキップ
"tests/**/*.py" = [
    # 少なくとも以下の3つはテストで許可されるべき:
    "S101", # テストでのassertを許可
    "ARG", # 未使用の関数引数 -> フィクスチャは機能的に関連があるため
    "FBT", # テストでの位置引数としてのbooleanを許可、例: @pytest.mark.parametrize()で使用
    # 以下は議論の余地がある
    "PLR2004", # 比較で使用されるマジック値
    "S311", # 標準の疑似乱数生成器は暗号目的には適していない
]

[tool.ruff.lint.pydocstyle]
# pydocstyleを無視しているのでこの設定は無意味だが、
# いずれdocstringのスタイルを統一するので設定だけしておく
convention = "google"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests",]
